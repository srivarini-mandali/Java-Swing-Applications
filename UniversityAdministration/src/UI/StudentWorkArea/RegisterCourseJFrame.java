/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI.StudentWorkArea;

import Business.Business;
import Business.UserAccount;
import CourseOffer.CourseOffer;
import DegreeRequest.DegreeRequest;
import Professor.Professor;
import Student.Course;
import Student.Student;
import Student.StudentCourseLoad;
import UI.main.MainJFrame;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author renuka
 */
public class RegisterCourseJFrame extends javax.swing.JFrame {

    /**
     * Creates new form RegisterCourseJFrame
     */
    DefaultTableModel tableModel;
    Business business;
    UserAccount useraccount;
    private Set<CourseOffer> registeredCourses = new HashSet<>();

    public RegisterCourseJFrame() {
        initComponents();
        this.setVisible(true);
    }
 public RegisterCourseJFrame(Business business,UserAccount useraccount) {
        initComponents();
        this.setVisible(true);
        this.business = business;
        this.useraccount = useraccount;
        this.tableModel = (DefaultTableModel) tblCourseRegistration.getModel() ;
       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

 
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        lblSearchCourse = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        lblCoursesList = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCourseRegistration = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        lblSelectCourseforRegistration = new javax.swing.JLabel();
        btnRegister = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        searchComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(216, 164, 164));

        jLabel13.setFont(new java.awt.Font("American Typewriter", 1, 36)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(32, 79, 219));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("COURSE REGISTRATION");

        lblSearchCourse.setFont(new java.awt.Font("Baskerville", 1, 18)); // NOI18N
        lblSearchCourse.setText("Search Course By  :");

        lblCoursesList.setFont(new java.awt.Font("Baskerville", 1, 18)); // NOI18N
        lblCoursesList.setText("Courses List :");

        tblCourseRegistration.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Course Id", "Course Name", "Professor Id", "Professor Name", "Reputation Index", "Credits", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCourseRegistration);

        btnBack.setFont(new java.awt.Font("Charter", 1, 18)); // NOI18N
        btnBack.setText("<< BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnLogout.setFont(new java.awt.Font("Charter", 1, 18)); // NOI18N
        btnLogout.setText("LOG OUT");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        lblSelectCourseforRegistration.setFont(new java.awt.Font("Baskerville", 1, 18)); // NOI18N
        lblSelectCourseforRegistration.setText("Select Course for Registration");

        btnRegister.setFont(new java.awt.Font("Charter", 1, 18)); // NOI18N
        btnRegister.setText("Register for the selected course");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Charter", 1, 18)); // NOI18N
        btnSearch.setText("SEARCH");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        searchComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Professor Name", "Course Id", "Course Name", "Language", " " }));
        searchComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(btnLogout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(136, 136, 136))
            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSelectCourseforRegistration)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCoursesList)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(lblSearchCourse)
                        .addGap(64, 64, 64)
                        .addComponent(searchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(352, 352, 352)
                        .addComponent(btnSearch)))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRegister)
                .addGap(254, 254, 254))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel13)
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearchCourse)
                    .addComponent(searchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCoursesList)
                .addGap(18, 18, 18)
                .addComponent(lblSelectCourseforRegistration)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btnRegister)
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnLogout))
                .addGap(95, 95, 95))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        new StudentJFrame(business, useraccount);
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
         this.setVisible(false);
         new MainJFrame(this.business, this.useraccount);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:
        Student s = this.business.getStudentDirectory().findByUserName(this.useraccount.getUsername());

        
        
        int selectedRow = tblCourseRegistration.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a course to register", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            String courseId = (String) tableModel.getValueAt(selectedRow, 0);
            CourseOffer co = findCourseOfferById(courseId);
             if (co != null && !isCourseAlreadyRegistered(s, co)) {
            // Register the course
            Professor professorOfSelectedCourse = co.getProfessor();
            s.getStudentCourseLoadDirectory().addCourseLoad(co);

            // Add the course to the set of registered courses
            registeredCourses.add(co);

            JOptionPane.showMessageDialog(null, "Course registered successfully");
        } else {
            JOptionPane.showMessageDialog(null, "This course is already registered", "Duplicate Course", JOptionPane.WARNING_MESSAGE);
        }
        }
       
    }//GEN-LAST:event_btnRegisterActionPerformed
private CourseOffer findCourseOfferById(String courseId) {
    for (Professor professor : this.business.getProfessorDirectory().getProfessorList()) {
        for (CourseOffer courseOffer : professor.getProfessorCourseOfferDir().getCourseOfferList()) {
            if (courseOffer.getCourse().getId().equals(courseId)) {
                return courseOffer;
            }
        }
    }
    return null; // Course not found
}
private boolean isCourseAlreadyRegistered(Student student, CourseOffer courseOffer) {
    for (StudentCourseLoad scl : student.getStudentCourseLoadDirectory().getCourseLoadList()) {
        if (scl.getCourseOffer() == courseOffer) {
            return true;
        }
    }
    return false;
}
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String selectedItem = String.valueOf(searchComboBox.getSelectedItem());
        String search = txtSearch.getText() ;
        
        if(selectedItem.equals("Professor Name"))
        {
              
            tableModel.setRowCount(0);
            for(Professor p: this.business.getProfessorDirectory().getProfessorList())
           {   
                if(p.getName().toLowerCase().contains(search.toLowerCase())){
                    for(CourseOffer courseOffer : p.getProfessorCourseOfferDir().getCourseOfferList() )
                    {  Object row[] = new Object[7] ;
                      row[0] = courseOffer.getCourse().getId();
                      row[1] = courseOffer.getCourse().getName();
                      row[2] = p.getId();
                      row[3] = p.getName();
                      row[4] = p.getReputationIndex();
                      row[5] = courseOffer.getCourse().getCredits();
                      row[6] = courseOffer.getPrice();



                     tableModel.addRow(row);
                    }
                }
           }
        }
        
        if(selectedItem.equals("Course Id"))
        {  String searchbyid = search;
          tableModel.setRowCount(0);
            for(Professor p: this.business.getProfessorDirectory().getProfessorList())
           {   
            
              for(CourseOffer courseOffer : p.getProfessorCourseOfferDir().getCourseOfferList() )
              {  
                  if(courseOffer.getCourse().getId().equals(searchbyid))
                  { Object row[] = new Object[7] ;
                 
                   row[0] = courseOffer.getCourse().getId();
                      row[1] = courseOffer.getCourse().getName();
                      row[2] = p.getId();
                      row[3] = p.getName();
                      row[4] = p.getReputationIndex();
                      row[5] = courseOffer.getCourse().getCredits();
                      row[6] = courseOffer.getPrice();
              
              
                    tableModel.addRow(row);
                  }
              }
            }
        }
        if(selectedItem.equals("Course Name"))
        {
                String searchbycoursename = search;
          tableModel.setRowCount(0);
            for(Professor p: this.business.getProfessorDirectory().getProfessorList())
           {   
            
              for(CourseOffer courseOffer : p.getProfessorCourseOfferDir().getCourseOfferList() )
              {  
                  if(courseOffer.getCourse().getName().toLowerCase().contains(searchbycoursename.toLowerCase()))
                  { Object row[] = new Object[7] ;
                    row[0] = courseOffer.getCourse().getId();
                      row[1] = courseOffer.getCourse().getName();
                      row[2] = p.getId();
                      row[3] = p.getName();
                      row[4] = p.getReputationIndex();
                      row[5] = courseOffer.getCourse().getCredits();
                      row[6] = courseOffer.getPrice();
              
              
                    tableModel.addRow(row);
                  }
              }
            }
        }
        
        if(selectedItem.equals("Language"))
        {
                 String searchbylanguage = search;
          tableModel.setRowCount(0);
            for(Professor p: this.business.getProfessorDirectory().getProfessorList())
           {   
            
              for(CourseOffer courseOffer : p.getProfessorCourseOfferDir().getCourseOfferList() )
              {  
                  if(courseOffer.getLanguage().toLowerCase().equals(searchbylanguage.toLowerCase()))
                  { Object row[] = new Object[7] ;
                    row[0] = courseOffer.getCourse().getId();
                      row[1] = courseOffer.getCourse().getName();
                      row[2] = p.getId();
                      row[3] = p.getName();
                      row[4] = p.getReputationIndex();
                      row[5] = courseOffer.getCourse().getCredits();
                      row[6] = courseOffer.getPrice();
              
              
                    tableModel.addRow(row);
                  }
              }
            }
        }
      
          
                
        
       
              
             
    }//GEN-LAST:event_btnSearchActionPerformed

    private void searchComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterCourseJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterCourseJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterCourseJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterCourseJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterCourseJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnRegister;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCoursesList;
    private javax.swing.JLabel lblSearchCourse;
    private javax.swing.JLabel lblSelectCourseforRegistration;
    private javax.swing.JComboBox<String> searchComboBox;
    private javax.swing.JTable tblCourseRegistration;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
