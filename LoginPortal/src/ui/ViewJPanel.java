/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JCheckBox;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import model.ListofUsers;
import model.Login;
import model.PasswordHasher;

/**
 *
 * @author srivarinimandali
 */
public class ViewJPanel extends javax.swing.JPanel {

    private JPanel workArea;
    private Login login;
    private ManageUserJPanel manageUserPanel;
    private ListofUsers listofUsers; // Add a variable to store the ListofUsers object
    private String originalPassword;

    // Updated constructor to accept ListofUsers
    ViewJPanel(JPanel workArea, Login login, ManageUserJPanel manageUserPanel, ListofUsers listofUsers) {
        initComponents();
        this.workArea = workArea;
        this.login = login;
        this.manageUserPanel = manageUserPanel;
        this.listofUsers = listofUsers; // Store the ListofUsers object
        originalPassword = login.getOriginalPassword();
        populateUserDetails();
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblNUID = new javax.swing.JLabel();
        txtNUID = new javax.swing.JTextField();
        lblStudentName = new javax.swing.JLabel();
        txtStudentName = new javax.swing.JTextField();
        lblEmailID = new javax.swing.JLabel();
        txtEmailID = new javax.swing.JTextField();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        lblRole = new javax.swing.JLabel();
        txtRole = new javax.swing.JTextField();

        setBackground(new java.awt.Color(220, 202, 132));

        jPanel1.setBackground(new java.awt.Color(220, 202, 132));

        lblTitle.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("VIEW USER");

        lblNUID.setText("NUID :");

        txtNUID.setEnabled(false);
        txtNUID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNUIDActionPerformed(evt);
            }
        });

        lblStudentName.setText("Student Name :");

        txtStudentName.setEnabled(false);

        lblEmailID.setText("Email ID :");

        txtEmailID.setEnabled(false);
        txtEmailID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailIDActionPerformed(evt);
            }
        });

        lblUsername.setText("Username :");

        txtUsername.setEnabled(false);
        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        lblPassword.setText("Password :");

        txtPassword.setEnabled(false);
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblRole.setText("Role:");

        txtRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRoleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblUsername)
                                    .addComponent(lblPassword)))
                            .addComponent(lblStudentName)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(368, 368, 368)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(306, 306, 306)
                                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(275, 275, 275)
                                        .addComponent(lblEmailID)))
                                .addGap(35, 35, 35))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRole)
                                    .addComponent(lblNUID))
                                .addGap(49, 49, 49)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmailID)
                            .addComponent(txtNUID, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStudentName, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(txtUsername)
                            .addComponent(txtPassword)
                            .addComponent(txtRole)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 755, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtEmailID, txtNUID, txtPassword, txtStudentName, txtUsername});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblEmailID, lblNUID, lblPassword, lblStudentName, lblUsername});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRole)
                    .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNUID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNUID, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStudentName)
                    .addComponent(txtStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmailID)
                    .addComponent(txtEmailID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate))
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtEmailID, txtNUID, txtPassword, txtStudentName, txtUsername});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblEmailID, lblPassword, lblStudentName, lblUsername});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);

        // Call the updateTable method to refresh the table
        manageUserPanel.updateTable();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if (txtRole.getText().equals("Regular User")) {
            txtNUID.setEnabled(true);
        } else {
            txtNUID.setEnabled(false);
        }
        txtStudentName.setEnabled(true);
        txtEmailID.setEnabled(true);
        txtUsername.setEnabled(true);
        txtPassword.setEnabled(true);

        btnSave.setEnabled(true);
        btnUpdate.setEnabled(false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

        String newNUID = txtNUID.getText();
        String newStudentName = txtStudentName.getText();
        String newEmailID = txtEmailID.getText();
        String newUsername = txtUsername.getText();
        String newPassword = txtPassword.getText();

        // Validate the fields
        if (!isValidNUID(newNUID)) {
            JOptionPane.showMessageDialog(this, "Invalid NU ID. It should be 6 digits.", "Invalid NU ID", JOptionPane.ERROR_MESSAGE);
        } else if (!isValidStudentName(newStudentName)) {
            JOptionPane.showMessageDialog(this, "Invalid student name. It should contain alphabets and spaces only, and be at least 2 characters long.", "Invalid Student Name", JOptionPane.ERROR_MESSAGE);
        } else if (!isValidEmail(newEmailID)) {
            JOptionPane.showMessageDialog(this, "Invalid email ID format.", "Invalid Email ID", JOptionPane.ERROR_MESSAGE);
        } else if (!isValidUsername(newUsername)) {
            JOptionPane.showMessageDialog(this, "Invalid username. It should be between 6 and 20 characters.", "Invalid Username", JOptionPane.ERROR_MESSAGE);
        } else if (!isValidPassword(newPassword)) {
            JOptionPane.showMessageDialog(this, "Invalid password. It should be at least 8 characters long.", "Invalid Password", JOptionPane.ERROR_MESSAGE);
        } else {
        // Check if the new password is the same as the existing one
        if (originalPassword.equals(newPassword)) {
            JOptionPane.showMessageDialog(null, "The new password is the same as the existing password. Please choose a different one.");
        } else if (login.getPasswordHistory() != null && login.getPasswordHistory().contains(PasswordHasher.hashPassword(newPassword))) {
            JOptionPane.showMessageDialog(null, "Cannot use a previously used password.");
        } else {
            // Update user details
            login.setNuid(Integer.parseInt(newNUID));
            login.setStudentName(newStudentName);
            login.setEmailID(newEmailID);
            login.setUsername(newUsername);

            // Store the original password
            originalPassword = newPassword;

            // Add the current password to history
            login.addToPasswordHistory(PasswordHasher.hashPassword(originalPassword));

            // Update the password (hashed)
            login.setPassword(PasswordHasher.hashPassword(originalPassword));
            login.setOriginalPassword(originalPassword);

            // Disable the save button and enable the update button
            btnSave.setEnabled(false);
            btnUpdate.setEnabled(true);

            // Display the hashed password in the table
            manageUserPanel.updateTable();

            // Display the original password in the text field
            txtPassword.setText(originalPassword);

            JOptionPane.showMessageDialog(null, "User details updated successfully");
        }
    }


    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtNUIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNUIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNUIDActionPerformed

    private void txtEmailIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailIDActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRoleActionPerformed
// Helper method to validate email

    private boolean isValidEmail(String email) {
        // Define a regular expression pattern for email validation
        String emailPattern = "^[A-Za-z0-9+_.-]+@(.+)$";

        // Use the matches method to check if the email matches the pattern
        return email.matches(emailPattern);
    }
// Helper method to validate NU ID

    private boolean isValidNUID(String nuid) {
        // Define a regular expression pattern for NU ID validation
        String nuidPattern = "^[A-Za-z0-9]{6}$";

        // Use the matches method to check if the NU ID matches the pattern
        return nuid.matches(nuidPattern);
    }

// Helper method to validate student name
    private boolean isValidStudentName(String name) {
        // Define a regular expression pattern for student name validation
        String namePattern = "^[A-Za-z\\s-]{2,}$";

        // Use the matches method to check if the name matches the pattern
        return name.matches(namePattern);
    }

    private boolean isValidUsername(String username) {
        // Add your username validation logic here
        // For example, you can check if the username meets your criteria (e.g., length, characters allowed)
        return username.length() >= 6 && username.length() <= 20;
    }

// Helper method to validate password
    private boolean isValidPassword(String password) {
        // Add your password validation logic here
        // For example, you can check if the password meets your criteria (e.g., length)
        return password.length() >= 8;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblEmailID;
    private javax.swing.JLabel lblNUID;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblStudentName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTextField txtEmailID;
    private javax.swing.JTextField txtNUID;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtRole;
    private javax.swing.JTextField txtStudentName;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void populateUserDetails() {
    txtNUID.setText(String.valueOf(login.getNuid()));
    txtStudentName.setText(login.getStudentName());
    txtEmailID.setText(login.getEmailID());
    txtUsername.setText(login.getUsername());
    txtPassword.setText(login.getOriginalPassword());
    txtRole.setText(login.getRole());

    }


}